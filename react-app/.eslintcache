[{"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\index.js":"1","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Header.js":"2","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Footer.js":"3","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\About.js":"4","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\App.js":"5","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\AddCustomer.js":"6","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Customer.js":"7","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\reportWebVitals.js":"8","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Customers.js":"9","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Button.js":"10","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\UpdateCustomer.js":"11","D:\\ProductBoxTask\\react-app\\src\\reportWebVitals.js":"12","D:\\ProductBoxTask\\react-app\\src\\components\\Customers.js":"13","D:\\ProductBoxTask\\react-app\\src\\components\\Customer.js":"14"},{"size":500,"mtime":1638644546000,"results":"15","hashOfConfig":"16"},{"size":696,"mtime":1663514144894,"results":"17","hashOfConfig":"16"},{"size":203,"mtime":1638644546000,"results":"18","hashOfConfig":"16"},{"size":186,"mtime":1638644546000,"results":"19","hashOfConfig":"16"},{"size":3512,"mtime":1663578904699,"results":"20","hashOfConfig":"16"},{"size":3222,"mtime":1663523416291,"results":"21","hashOfConfig":"16"},{"size":924,"mtime":1663576987104,"results":"22","hashOfConfig":"16"},{"size":362,"mtime":1638644546000,"results":"23","hashOfConfig":"16"},{"size":269,"mtime":1663524148585,"results":"24","hashOfConfig":"16"},{"size":408,"mtime":1638644546000,"results":"25","hashOfConfig":"16"},{"size":4628,"mtime":1663579060623,"results":"26","hashOfConfig":"16"},{"size":362,"mtime":1638644546000,"results":"27","hashOfConfig":"28"},{"size":269,"mtime":1663524148585,"results":"29","hashOfConfig":"28"},{"size":1807,"mtime":1663581957105,"results":"30","hashOfConfig":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fktdj3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aud7sd",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\index.js",[],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Header.js",[],["62","63"],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Footer.js",[],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\About.js",[],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\App.js",["64","65"],"import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Customers from './components/Customers'\nimport AddCustomer from './components/AddCustomer'\nimport About from './components/About'\nimport UpdateCustomer from './components/UpdateCustomer'\n\nconst App = () => {\n  const [showAddCustomer, setShowAddCustomer] = useState(false)\n  const [customers, setCustomers] = useState([])\n  const getCustomers = async () => {\n    const customersFromServer = await fetchCustomers()\n    setCustomers(customersFromServer)\n  }\n  useEffect(() => {\n    getCustomers()\n  }, [])\n\n  // Fetch Customer\n  const fetchCustomers = async () => {\n    const res = await fetch('http://localhost:5000/Api/Customer')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Customer\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/customers/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Customer\n  const addCustomer = async (customer) => {\n    const res = await fetch('http://localhost:5000/Api/Customer', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(customer),\n    })\n    const data = await res.json()\n    // setCustomers([...customers, data])\n    if (data === \"Added Successfully\") {\n      getCustomers();\n    }\n  }\n  //Update Customer\n  const updateCustomer = async (customer) => {\n    console.log(customer);\n    const res = await fetch('http://localhost:5000/Api/Customer', {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(customer),\n    })\n    const data = await res.json()\n    console.log(data);\n    // setCustomers([...customers, data])\n    if (data === \"Updated Successfully\") {\n      getCustomers();\n    }\n  }\n\n  // Delete Customer\n  const deleteCustomer = async (id) => {\n    try {\n      const res = await fetch(`http://localhost:5000/Api/Customer/${id}`, {\n        method: 'DELETE',\n      })\n      //We should control the response status to decide if we will change the state or not.\n      //setCustomers(customers.filter((customer) => customer.id !== id))\n      const data = await res.json()\n      // setCustomers([...customers, data])\n      if (data === \"Deleted Successfully\") {\n        getCustomers();\n      }\n    }\n    catch (error) {\n      alert('Error Deleting This Customer');\n    }\n  }\n\n\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddCustomer(!showAddCustomer)}\n          showAdd={showAddCustomer}\n        />\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n                {showAddCustomer && <AddCustomer onAdd={addCustomer} />}\n                {customers.length > 0 ? (\n                  <Customers\n                    customers={customers}\n                    onDelete={deleteCustomer}\n                  />\n                ) : (\n                  'No Customers added yet'\n                )}\n              </>\n            }\n          />\n          <Route\n            path='/customer/:id'\n            element={\n              <UpdateCustomer onUpdate={updateCustomer} />\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router >\n  )\n}\n\nexport default App\n","D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\AddCustomer.js",[],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Customer.js",[],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\reportWebVitals.js",[],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Customers.js",[],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\Button.js",[],"D:\\react-crash-2021-a644cdedd86d9a4bb939eca4881bf26a29340519\\src\\components\\UpdateCustomer.js",["66"],"import { useState, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst UpdateCustomer = ({ onUpdate }) => {\r\n    const location = useLocation();\r\n    const { data } = location.state ? location.state : '';\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (!data) {\r\n            navigate('/')\r\n        }\r\n    }, [data]\r\n    )\r\n    console.log(data);\r\n    const [customername, setCustomerName] = useState(data && data.Name)\r\n    const [customertypeid, setCustomeTypeID] = useState(data && data.CustomerTypeId)\r\n    const [description, setDescription] = useState(data && data.Description)\r\n    const [address, setAddress] = useState(data && data.Address)\r\n    const [city, setCity] = useState(data && data.City)\r\n    const [state, setState] = useState(data && data.State)\r\n    const [zip, setZip] = useState(data && data.Zip)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(customername === data.Name);\r\n        if (customername === data.Name) {\r\n            alert('Please update Customer before clicking update')\r\n            return\r\n        }\r\n\r\n        if (description === data.Description) {\r\n            alert('Please update description before clicking update')\r\n            return\r\n        }\r\n        if (address === data.Address) {\r\n            alert('Please update Address before clicking update')\r\n            return\r\n        }\r\n        if (city === data.City) {\r\n            alert('Please update City before clicking update')\r\n            return\r\n        }\r\n\r\n        if (state === data.State) {\r\n            alert('Please update State before clicking update')\r\n            return\r\n        }\r\n        if (zip === data.Zip) {\r\n            alert('Please update Zip before clicking update')\r\n            return\r\n        }\r\n\r\n        onUpdate({\r\n            Id: data.Id, Name: customername, CustomerTypeId: customertypeid, Description: description, Address: address, City: city,\r\n            State: state, Zip: zip\r\n        })\r\n\r\n        setCustomerName('')\r\n        setCustomeTypeID(0)\r\n        setDescription('')\r\n        setAddress('')\r\n        setCity('')\r\n        setState('')\r\n        setZip('')\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Name</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={data && data.Name}\r\n                    onChange={(e) => setCustomerName(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Customer Type</label>\r\n                <input\r\n                    type='number'\r\n                    placeholder={data && data.CustomerTypeId}\r\n                    onChange={(e) => setCustomeTypeID(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Description</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={data && data.Description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Address</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={data && data.Address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>City</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={data && data.City}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>State</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={data && data.State}\r\n                    onChange={(e) => setState(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Zip</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={data && data.Zip}\r\n                    onChange={(e) => setZip(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n\r\n            <input type='submit' value='Update Customer' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateCustomer\r\n","D:\\ProductBoxTask\\react-app\\src\\reportWebVitals.js",[],"D:\\ProductBoxTask\\react-app\\src\\components\\Customers.js",[],"D:\\ProductBoxTask\\react-app\\src\\components\\Customer.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":19,"column":6,"nodeType":"73","endLine":19,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":30,"column":9,"nodeType":"77","messageId":"78","endLine":30,"endColumn":18},{"ruleId":"71","severity":1,"message":"79","line":14,"column":8,"nodeType":"73","endLine":14,"endColumn":14,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'fetchTask' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [getCustomers]",{"range":"89","text":"90"},"Update the dependencies array to be: [data, navigate]",{"range":"91","text":"92"},[706,708],"[getCustomers]",[380,386],"[data, navigate]"]